<launch>

  <!-- occupancy map -->
  <include file="$(find iai_maps)/launch/map.launch" />

  <!-- kitchen URDF -->
  <param name="kitchen_description"
         command="$(find xacro)/xacro.py '$(find iai_kitchen)/urdf/IAI_kitchen.urdf.xacro'"/>
  <node pkg="tf" type="static_transform_publisher" name="kitchen_link_broadcaster"
        args="0 0 0 0 0 0 /map /iai_kitchen/world 100">
  </node>
  <node pkg="robot_state_chain_publisher" type="state_chain_publisher"
    name="kitchen_state_publisher" output="screen">
    <param name="tf_prefix" value="/iai_kitchen"/>
    <param name="publish_frequency" value="1"/>
    <remap from="robot_description" to="kitchen_description" />
  </node>

  <!-- kitchen (new) semantic map -->
  <param name="initial_package" type="string" value="knowrob_map_data" />
  <param name="initial_goal" type="string" value="owl_parse('package://iai_semantic_maps/owl/kitchen.owl')" />
  <node name="json_prolog" pkg="json_prolog" type="json_prolog_node" cwd="node" output="screen" />

  <!-- PR2 URDF -->
  <param name="robot_description"
         command="$(find xacro)/xacro.py
                  '$(find pr2_description)/robots/pr2.urdf.xacro'"/>

  <!-- PR2 IK solver -->
  <include file="$(find pr2_arm_kinematics)/launch/pr2_ik_larm_node.launch" />
  <include file="$(find pr2_arm_kinematics)/launch/pr2_ik_rarm_node.launch" />
</launch>
